// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Domain.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ClickTabs")]
    public partial class ClickTabsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ClickTabs.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ClickTabs", "Verify the all pages are loaded successfully when each tabs in the domain home pa" +
                    "ge is clicked.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Click and verify successful loading for tabs.")]
        [NUnit.Framework.CategoryAttribute("DomainTestCases")]
        [NUnit.Framework.TestCaseAttribute("1", "TC_001", "Buy", "Buy Houses, Apartments, Units, Flats and New Developments | Real Estate | Domain", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "TC_002", "Rent", "Rent Houses, Apartments, Units, Flats and New Developments | Real Estate | Domain" +
            "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "TC_003", "New Homes", "New Homes | Home & Land Packages | Off the Plan Apartments", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "TC_004", "Sold", "Sold Houses, Apartments, Units, Flats and New Developments | Real Estate | Domain" +
            "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("5", "TC_005", "News", "News – Domain", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6", "TC_006", "Advice", "Advice – Domain", new string[0])]
        [NUnit.Framework.TestCaseAttribute("7", "TC_007", "Agents", "Search for real estate agents to sell your property in Australia", new string[0])]
        [NUnit.Framework.TestCaseAttribute("8", "TC_008", "Commercial", "Commercial Real Estate and Property For Sale and Lease in Australia | CommercialR" +
            "ealEstate.com.au", new string[0])]
        public virtual void ClickAndVerifySuccessfulLoadingForTabs_(string id, string testCaseName, string tab_Name, string title, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DomainTestCases"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Click and verify successful loading for tabs.", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("Open the home page in chrome bowser.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And(string.Format("I click on the tab {0}.", tab_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.Then(string.Format("The page should be successfully loaded with title {0}.", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
